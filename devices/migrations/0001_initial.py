# Generated by Django 5.1.3 on 2024-12-27 20:11

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('last_online', models.DateTimeField(default=django.utils.timezone.now)),
                ('unread_notifications', models.IntegerField(default=0)),
                ('healthy', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='HumiditySensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('humidity', models.FloatField(default=0.0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='humidity_data', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LightIntensitySensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('light_intensity', models.FloatField(default=0.0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='light_data', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NPKSensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('nitrogen', models.FloatField(default=0.0)),
                ('phosphorus', models.FloatField(default=0.0)),
                ('potassium', models.FloatField(default=0.0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrient_data', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SoilMoistureSensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('moisture', models.FloatField(default=0.0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moisture_data', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TemperatureSensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.FloatField(default=0.0)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_data', to='devices.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
